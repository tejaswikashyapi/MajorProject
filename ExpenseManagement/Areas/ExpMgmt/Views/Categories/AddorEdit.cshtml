@*@model ExpenseManagement.Models.Category

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">                
                 <ejs-textbox id="CategoryName"  placeholder="Category Name" ejs-for="CategoryName"  floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <ejs-textbox id="CategoryIcon" placeholder="Category Icon" ejs-for="CategoryIcon"  floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="CategoryIcon" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <div class='e-btn-group '>
                    <input type="radio" id="radioleft" name="CategoryType" value="Expense" checked="@(Model.CategoryType=="Expense")" />
                    <label class="e-btn" for="radioleft">Expense</label>
                    <input type="radio" id="radiomiddle" name="CategoryType" value="Income" checked="@(Model.CategoryType=="Income")" />
                    <label class="e-btn" for="radiomiddle">Income</label>                   
                </div>
                <span asp-validation-for="CategoryType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
@model ExpenseManagement.Models.Category

@{
    ViewData["PageTitle"] = Model.CategoryId == 0 ? "Create a new category" : "Edit category";
}


<div class="row">
    <div class="col-md-7">
        <div class="widget p-5" style="background-color:lightgray">
            <form asp-action="AddOrEdit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" name="CategoryId" value="@Model.CategoryId" />
                <div class="mb-3">
                    <div class='e-btn-group custom-rbt-group'>
                        <input type="radio" id="radioleft" name="CategoryType" value="Expense" checked="@(Model.CategoryType=="Expense")" />
                        <label class="e-btn" for="radioleft">Expense</label>
                        <input type="radio" id="radiomiddle" name="CategoryType" value="Income" checked="@(Model.CategoryType=="Income")" />
                        <label class="e-btn" for="radiomiddle">Income</label>
                    </div>
                </div>
                <div class="mb-3">
                    <ejs-textbox id="CategoryName" placeholder="Category Name" ejs-for="CategoryName" floatLabelType="Always"></ejs-textbox>
                    <span asp-validation-for="CategoryName" class="text-danger fs-6"></span>
                </div>
                <div class="mb-3">
                    <ejs-textbox id="CategoryIcon" placeholder="CategoryIcon" ejs-for="CategoryIcon" floatLabelType="Always"></ejs-textbox>
                </div>
                <ejs-button id="submit" type="submit" content="Submit" cssClass="e-success"></ejs-button>
            </form>
        </div>


    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center">
            <i class="fa-solid fa-shapes fa-2xl"></i>
        </div>
    </div>
</div>


@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}